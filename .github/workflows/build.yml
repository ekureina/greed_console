name: Build
on: [push, pull_request]

env:
  # Set a dummy API key to allow for compilation
  API_KEY: X
jobs:
  build:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev
          version: 1.0
          execute_install_scripts: true
      - name: Set up Cargo Cache
        uses: Swatinem/rust-cache@v2
      - run: cargo build --all-features
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: cargo test
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev
          version: 1.0
          execute_install_scripts: true
      - name: Set up Cargo Cache
        uses: Swatinem/rust-cache@v2
      - run: cargo test --all-features
  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev
          version: 1.0
          execute_install_scripts: true
      - name: Set up Cargo Cache
        uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-features
